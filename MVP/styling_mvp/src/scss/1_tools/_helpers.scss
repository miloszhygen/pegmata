// ~ Margin & padding helper ~
// See https://gist.github.com/dreamyguy/2fc16be42a01f21527c5a12bbb662f08
// Usage:
// Margin classes .m-[t|r|b|l]-[value]: margin-top [value]rem with px fallback.
// Padding classes .p-[t|r|b|l][value]: padding-top [value]rem with px fallback.

@import './bootstrap-grid-settings';

$sides: (top, bottom, left, right);
$space-values: (3, 5, 10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90, 100);

$medium-width: #{map-get($grid-breakpoints, md)}; // 769px

@each $side in $sides {
  @for $i from 1 through length($space-values) {

    .m-#{str-slice($side, 0, 1)}-#{nth($space-values, $i)} {
      margin-#{$side}: #{nth($space-values, $i)}px;
      margin-#{$side}: rem-calc(nth($space-values, $i), $base-font-size);
    }

    .p-#{str-slice($side, 0, 1)}-#{nth($space-values, $i)} {
      padding-#{$side}: #{nth($space-values, $i)}px;
      padding-#{$side}: rem-calc(nth($space-values, $i), $base-font-size);
    }

    // Temporarily visualise margins
    // [class$='m-#{str-slice($side, 0, 1)}-#{nth($space-values, $i)}'] {
    //   position: relative;
    //   &::before {
    //     position: absolute;
    //     content: attr(class);
    //     position: absolute;
    //     font-size: 12px;;
    //     z-index: 4;
    //     @if $side == top {
    //       color: $cl-status-green;
    //       background-color: rgba(199, 238, 0, 0.18);
    //       $result: rem-calc(nth($space-values, $i), $base-font-size);
    //       #{$side}: -$result;
    //       left: 0;
    //       text-align: right;
    //       height: rem-calc(nth($space-values, $i), $base-font-size);
    //       width: 100%;
    //     } @else if $side == bottom {
    //       color: rgb(140, 91, 0);
    //       background-color: rgba(238, 143, 0, 0.331);
    //       $result: rem-calc(nth($space-values, $i), $base-font-size);
    //       #{$side}: -$result;
    //       left: 0;
    //       text-align: right;
    //       height: rem-calc(nth($space-values, $i), $base-font-size);
    //       width: 100%;
    //     } @else {
    //       color: rgb(0, 128, 109);
    //       background-color: rgba(0, 128, 109, 0.351);
    //       #{$side}: 0;
    //       height: 100%;
    //       width: rem-calc(nth($space-values, $i), $base-font-size);
    //     }
    //   }
    // }

  }
}

.center {
  margin: 0 auto;
}
.center-text {
  text-align: center;
}
.float-right {
  float: right;
}
.clickable {
  cursor: pointer;
}
.line-top {
  border-top: 1px solid $clv-borders;
}
.line-bottom {
  border-bottom: 1px solid $clv-borders;
}

.parent {
  position: relative; // this is required to avoid unwanted absolute positioning behavior
  .absolute-top-right {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 2;
  }
  &.row{
    .absolute-top-right {
      right: $gutter-size;
    }
  }
}

.gutter-padding {
  padding: $gutter-size;
}

@mixin boxShadow {
  box-shadow: $shadow-default;
  -webkit-box-shadow: $shadow-default;
}

@mixin boxShadowBottom {
  box-shadow: $shadow-default-bottom;
  -webkit-box-shadow: $shadow-default-bottom;
}

@mixin whiteBox {
  position: relative;
  background-color: $cl-white;
  @include boxShadow();
}

.white-box {
  @include whiteBox();
}

.vertical-center-flex-content {
  margin-top: auto;
  margin-bottom: auto;
}

.nowrap {
  flex-wrap: nowrap !important;
}

.center-vertical {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.hide-mobile{
  @media (max-width: $medium-width) {
    display: none !important;
  }
}
